services:
  dms-api:
    image: dms-api-image
    build:
      context: ./dms-api  # Updated path to the REST API project
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081 # Stellt sicher, dass nur HTTP verwendet wird
    restart: always

  webui:
    image: web-ui-image
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    ports:
     - "80:80"
    volumes:
      - ./web-ui/nginx.conf:/etc/nginx/nginx.conf  # Binde die Nginx-Konfigurationsdatei ein
      - ./web-ui/wwwroot:/app/wwwroot  # Statische Dateien mounten
    depends_on:
      - dms-api

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Binde das Volume fï¿½r persistente Datenspeicherung ein

  dms-dal:
    image: dms-dal-image
    build:
      context: ./dms-dal
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - db

volumes:
   postgres_data:  # Definiertes Volume fuer persistente Datenspeicherung von PostgreSQL


