services:
  dms-api:
    image: dms-api-image
    build:
      context: .
      dockerfile: ./dms-api/Dockerfile
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
    restart: always
    depends_on:
      - db

  webui:
    image: web-ui-image
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./web-ui/nginx.conf:/etc/nginx/nginx.conf
      - ./web-ui/wwwroot:/app/wwwroot
    depends_on:
      - dms-api
      - rabbitmq

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "9093:9093"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  ocr-worker:
    build:
      context: ./ocr-worker
    container_name: ocr-worker
    depends_on:
      - rabbitmq
    volumes:
      - ./ocr-worker/tessdata:/app/tessdata
    environment:
      - RABBITMQ_HOST=rabbitmq

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9090"
    environment:
      - MINIO_ROOT_USER=user
      - MINIO_ROOT_PASSWORD=password
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9090:9090

volumes:
  postgres_data:  # This defines the volume
  minio_data:
